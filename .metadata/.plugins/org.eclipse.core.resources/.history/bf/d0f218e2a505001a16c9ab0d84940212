package br.edu.udc.vetorCirculos;

import java.awt.BorderLayout;
import java.awt.Graphics;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

public class VetorCirculo extends JFrame {

	private static final long serialVersionUID = 1L;
	
	private Painel mousePanel;
	private String message;
	private String origin;
	private double r;
	private int originX, originY;
	private int radiusX, radiusY;

	VetorCirculo(){
		super("Vetor de círculos");
		
		setSize(750, 750);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		setLayout(new BorderLayout());
		
		message = "";
		
		/* Mensagens de Rodapé */
		
		JLabel status = new JLabel("Mensagens de evento do mouse");
		add(status, BorderLayout.SOUTH);
		
		/* Painel de desenho */
		
		mousePanel = new Painel();
		add(mousePanel, BorderLayout.CENTER);
		
		mousePanel.addMouseListener(new MouseListener(){

			@Override
			public void mouseClicked(MouseEvent arg0) {
				
				
			}

			@Override
			public void mouseEntered(MouseEvent arg0) {
				
				
			}

			@Override
			public void mouseExited(MouseEvent arg0) {
				
				
			}

			@Override
			public void mousePressed(MouseEvent arg0) {
				originX = arg0.getX();
				originY = arg0.getY();
				
				origin = String.format("Origem: [%d; %d]", originX, originY);				
			}

			@Override
			public void mouseReleased(MouseEvent arg0) {
				
				
			}
			
		});
		
		mousePanel.addMouseMotionListener(new MouseMotionListener(){

			@Override
			public void mouseDragged(MouseEvent arg0) {
				radiusX = arg0.getX();
				radiusY = arg0.getY();
				
				message = origin + " - " + String.format("Raio: [%d; %d][%.2f]", radiusX, radiusY, r);
				
				status.setText(message);
				
			}

			@Override
			public void mouseMoved(MouseEvent arg0) {
				String moved = String.format("Mouse na posição [%d; %d]", arg0.getX(), arg0.getY());;
				
				if (message.length() > 1)
					moved = moved + " - " + message;
				
				status.setText(moved);
				
			}
			
		});
		
		
	
		setVisible(true);
	}
}


class Painel extends JPanel {
	private static final long serialVersionUID = 1L;
	
	private Circulo[] vetorCirculo;
	

	public void paint(Graphics g){
		super.paintComponent(g);
	}
}

class Circulo {
	private int originX, originY;
	private int radiusX, radiusY;
	
	public int getOriginX() {
		return originX;
	}
	
	
	public void setOriginX(int originX) {
		this.originX = originX;
	}
	
	public int getOriginY() {
		return originY;
	}
	
	public void setOriginY(int originY) {
		this.originY = originY;
	}
	
	public int getRadiusX() {
		return radiusX;
	}
	
	public void setRadiusX(int radiusX) {
		this.radiusX = radiusX;
	}
	
	public int getRadiusY() {
		return radiusY;
	}
	
	public void setRadiusY(int radiusY) {
		this.radiusY = radiusY;
	}
	
}